@model PaginatedViewModel<AdminViewModel>

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Welcome";
}

<div class="d-flex vh-100 mt-5 align-items-center flex-column">
    <div class="d-flex justify-content-between align-items-center mb-3 mw-800 toggle-bcg">
        <div>
            <button class="btn btn-outline-primary btn-toggle btn-text" id="blockSelected">
                <img id="lock" class="icon-toggle" src="~/images/icons/lock-fill-blue.svg" alt=""/>
                Block
            </button>
            <button class="btn btn-outline-primary btn-toggle btn-icon" id="unblockSelected">
                <img id="unlock" class="icon-toggle" src="~/images/icons/unlock-fill-blue.svg" alt=""/>
            </button>
            <button class="btn btn-outline-danger btn-toggle btn-icon" id="deleteSelected">
                <img id="trash" class="icon-toggle" src="~/images/icons/trash-red.svg" alt=""/>
            </button>
        </div>

        <div>
            <input type="text" id="customSearch" class="form-control" placeholder="Search..." oninput="performSearch(this.value)" value="@Model.SearchQuery">
        </div>
    </div>

    <table class="table mw-800">
        <thead>
        <tr>
            <th><input type="checkbox" id="selectAll"></th>
            <th>
                <a class="styled-link" href="?page=@(Model.CurrentPage - 1)&size=@Model.PageSize&sortColumn=Name&sortDirection=@(Model.SortColumn == "Name" && Model.SortDirection == "asc" ? "desc" : "asc")&size=@Model.PageSize&search=@Model.SearchQuery">
                    Name
                    @if (Model.SortColumn == "Name")
                    {
                        <span>@(Model.SortDirection == "asc" ? "▲" : "▼")</span>
                    }
                </a>
            </th>
            <th>
                <a class="styled-link" href="?page=@(Model.CurrentPage - 1)&size=@Model.PageSize&sortColumn=Email&sortDirection=@(Model.SortColumn == "Email" && Model.SortDirection == "asc" ? "desc" : "asc")&size=@Model.PageSize&search=@Model.SearchQuery">
                    Email
                    @if (Model.SortColumn == "Email")
                    {
                        <span>@(Model.SortDirection == "asc" ? "▲" : "▼")</span>
                    }
                </a>
            </th>
            <th>
                <a class="styled-link" href="?page=@(Model.CurrentPage - 1)&size=@Model.PageSize&sortColumn=LastSeen&sortDirection=@(Model.SortColumn == "LastSeen" && Model.SortDirection == "asc" ? "desc" : "asc")&size=@Model.PageSize&search=@Model.SearchQuery">
                    Last Seen
                    @if (Model.SortColumn == "LastSeen")
                    {
                        <span>@(Model.SortDirection == "asc" ? "▲" : "▼")</span>
                    }
                </a>
            </th>
        </tr>
        </thead>
        
        <tbody id="usersTableContainer">
        @await Html.PartialAsync("_UsersTable", Model)
        </tbody>
    </table>

    <div class="d-flex justify-content-between align-items-center mw-800">
        <div class="d-flex align-items-center">
            <label for="pageSize" class="me-2">Show</label>
            <select id="pageSize" class="form-select d-inline-block w-auto" onchange="updatePageSize(this.value)">
                @foreach (var size in new[] { 5, 10, 25, 50 })
                {
                    if (Model.PageSize == size)
                    {
                        <option value="@size" selected>@size</option>
                    }
                    else
                    {
                        <option value="@size">@size</option>
                    }
                }
            </select>
            <span class="ms-2">items</span>
        </div>
        
        <nav aria-label="Page navigation">
            <ul class="pagination mb-0">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" 
                           href="?page=@(Model.CurrentPage - 1)&size=@Model.PageSize&sortColumn=@Model.SortColumn&sortDirection=@Model.SortDirection&search=@Model.SearchQuery">
                            Previous
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link" href="?page=@i&size=@Model.PageSize&sortColumn=@Model.SortColumn&sortDirection=@Model.SortDirection&search=@Model.SearchQuery">
                            @i
                        </a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.CurrentPage + 1)&size=@Model.PageSize&sortColumn=@Model.SortColumn&sortDirection=@Model.SortDirection&search=@Model.SearchQuery">
                            Next
                        </a>
                    </li>
                }
            </ul>

        </nav>
    </div>
</div>

